setopt promptsubst
autoload -U promptinit
promptinit
prompt grb

autoload -U compinit
compinit

# Backslash not allways works as expected
bindkey '^R' history-incremental-search-backward

# Add paths that should have been there by default
export PATH=/sbin:/usr/local/sbin:/usr/local/bin:~/lib/bin:${PATH}
export PATH="$HOME/bin:$PATH"
export PATH="$PATH:~/.gem/ruby/1.8/bin"
export PATH="$HOME/local/bin:$PATH"

# Load local settings.
test -s ~/local/bin/local-settings && . ~/local/bin/local-settings || true

# Load aliases
test -s ~/.alias && . ~/.alias || true

# Fix ls colors for solarized theme
export LSCOLORS="ExGxBxDxCxEgEdxbxgxcxd"

# Use colors for grep
export GREP_OPTIONS="--color"

# Add colors to less
export LESS="-R"

# Unbreak history
export HISTSIZE=100000
export HISTFILE="$HOME/.history"
export SAVEHIST=$HISTSIZE
setopt hist_ignore_all_dups

# Use vi key bindings
bindkey -v

# Show vi mode
function zle-line-init zle-keymap-select {
    RPS1="${${KEYMAP/vicmd/-- NORMAL --}/(main|viins)/-- INSERT --}"
    RPS2=$RPS1
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

# Share history betwean instances
setopt inc_append_history
setopt share_history

# Load ssh env
source $HOME/.ssh/environment

# Load ssh env
source $HOME/.ssh/environment

# Use vim as default editor
export EDITOR=`which vim`
export GIT_EDITOR="$EDITOR"

# Setup rvm
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function
PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

# Add simple directory navigation z.
source ~/bin/z
function precmd () {
    _z --add "$(pwd -P)"
}

# Start simple HTTP server in current directory.
function serve-http(){
    port_number=${1:-8080}
    python -m SimpleHTTPServer "$port_number"
}

mcd () { mkdir -p "$@" && cd "$@"; }

# Batch rename files
autoload -U zmv
alias mmv='noglob zmv -W'

# Remove man prompt for correct page
export MAN_POSIXLY_CORRECT=1

# Enable syntax highlighting
source ~/.zsh/plugins/syntax-highlighting/zsh-syntax-highlighting.zsh

# Do not freeze terminal on Ctrl+s
stty stop ''

# Load python virtualenv environment
work(){
    ENV_NAME=$1
    source ${ENV_NAME:-venv}/bin/activate
}

# Create clean slate directory to test out ideas
function new-scratch {
    cur_dir="$HOME/scratch"
    new_dir="$HOME/Tmp/scratch-`date +'%s'`"
    mkdir -p $new_dir
    ln -nfs $new_dir $cur_dir
    cd $cur_dir
    echo "New scratch dir ready for grinding ;>"
}

# Setup distribute for Python 3
function setup-distribute() {
    curl -L http://python-distribute.org/distribute_setup.py | python
}


# Download Python packages localy and install in separate step
PIP_PACKAGE_DIR=/home/abele/pip-packages/

function pip_install {
    pip install --no-index --find-links=file://$PIP_PACKAGE_DIR $*
}

function pip_download {
    pip install --download=$PIP_PACKAGE_DIR --exists-action=i $*
}

function dj {
    python manage.py $*
}

# Change working directory to project base
cpb () {
    cd `project-root-path`
}
source ~/.autoenv/activate.sh
