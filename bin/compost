#!/usr/bin/env python3
"""Archive File

Usage: compost [options] FILE

Arguments:
  FILE File to archive.

Options:
  -l LEVEL --log-level=LEVEL   Set logging level [default: error].

"""
import datetime as dt
import logging
import os
import shutil
import sys

from os import path
from docopt import docopt


COMPOST_PATH = '~/compost'


def main(args=None):
    if not args:
        args = docopt(__doc__, version='0.1.0')
        logging.basicConfig(level=getattr(logging, args['--log-level'].upper()))

    log = logging.getLogger(__name__)
    log.debug(args)

    rc = os.EX_OK

    try:
        copy_files(args['FILE'], COMPOST_PATH)
    except KeyboardInterrupt:
        pass
    except Exception:
        rc = os.EX_SOFTWARE

    return rc


def copy_files(src, dest):
    log = logging.getLogger(__name__)
    today = dt.date.today()
    src = path.abspath(path.join(os.getcwd(), src))
    dest = path.join(
        path.expanduser(dest),
        str(today.year),
        '{:02d}'.format(today.month),
        src.strip(path.sep)
    )
    log.debug('Moving to compost: src=%s dest=%s', src, dest)
    try:
        if path.isfile(src):
            os.makedirs(path.dirname(dest))
            shutil.copy(src, dest)
        else:
            shutil.copytree(src, dest)
    except FileExistsError:
        print('File already in compost: src={} dest={} '.format(src, dest))


if __name__ == '__main__':
    sys.exit(main())
