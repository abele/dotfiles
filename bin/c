#!/usr/bin/env python3
"""Google Chrome Profile Selector

Usage: c  [options] [PROFILE]

Arguments:
  PROFILE Profile name to select.

Options:
  -l LOG_LEVEL --log-level=LOG_LEVEL   Set logging serverity [default: error].

"""
import json
import logging
import os
import subprocess
import sys
from difflib import SequenceMatcher as SM
import operator

from docopt import docopt


def main(args=None):
    rc = os.EX_OK

    if not args:
        args = docopt(__doc__, version='0.1.0')
        logging.basicConfig(level=getattr(logging, args['--log-level'].upper()))

    log = logging.getLogger(__name__)
    log.debug(args)

    try:
        chrome_dir = os.path.expanduser('~/.config/google-chrome')
        with open(os.path.join(chrome_dir,'Local State')) as f:
            config = json.load(f)

        paths = {info['name']: path for path, info in
                config['profile']['info_cache'].items()}

        # XXX: not functional, using index to access items
        if args['PROFILE'] is None:
            profile_path = 'Default'
        else:
            fuzy = {
                profile: SM(None, args['PROFILE'], profile).ratio()
                for profile in paths
            }
            profile_path = paths[max(fuzy.items(), key=operator.itemgetter(1))[0]]

        cmd = [os.environ['BROWSER'], '--profile-directory={}'.format(profile_path)]
        subprocess.call(cmd)
    except KeyboardInterrupt:
        pass
    except Exception:
        rc = os.EX_SOFTWARE

    return rc


if __name__ == '__main__':
    sys.exit(main())
