#!/usr/bin/env python3
"""Google Chrome Profile Selector

Usage: c  [options] [PROFILE]

Arguments:
  PROFILE Profile name to select.

Options:
  -l LOG_LEVEL --log-level=LOG_LEVEL   Set logging serverity [default: error].

"""
import json
import logging
import operator
import os
import subprocess
import sys
from difflib import get_close_matches

from docopt import docopt


def main(args=None):
    rc = os.EX_OK

    if not args:
        args = docopt(__doc__, version='0.1.0')
        logging.basicConfig(level=getattr(logging, args['--log-level'].upper()))

    log = logging.getLogger(__name__)
    log.debug('Passed in args: args=%s', args)

    try:
        config_path = os.path.join(os.path.expanduser('~/.config/google-chrome'), 'Local State')
        log.debug('Reading Google Chrome config: path=%s', config_path)
        with open(config_path) as f:
            config = json.load(f)

        paths = {info['name']: path for path, info in
                config['profile']['info_cache'].items()}
        log.debug('Read available profiles: profiles=%s', paths)
        if args['PROFILE']:
            names = get_close_matches(args['PROFILE'], paths.keys(), cutoff=0)
            log.debug('Found profile names matches: names=%s', names)
            profile_path = paths[first(names)]
        else:
            profile_path = 'Default'

        cmd = [os.environ['BROWSER'], '--profile-directory={}'.format(profile_path)]
        log.debug('Running cmd: cmd=%s', cmd)
        subprocess.call(cmd)
    except KeyboardInterrupt:
        pass
    except Exception:
        log.exception('Something went wrong.')
        rc = os.EX_SOFTWARE

    return rc


def first(iterable):
    return next(iter(iterable))


if __name__ == '__main__':
    sys.exit(main())
